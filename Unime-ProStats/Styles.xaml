<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Unime_ProStats">

    <DropShadowEffect x:Key="shadowButton" BlurRadius="5" Color="#A954C7" Direction="270" ShadowDepth="0"/>
    <DropShadowEffect x:Key="lightShadow" BlurRadius="5" Color="#FFFFFF" ShadowDepth="0"/>
    <Style TargetType="Button" x:Key="ButtonBase">
        <Style.Resources>
        </Style.Resources>
    </Style>
    <Style TargetType="Button" x:Key="ButtonImportant" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Effect" Value="{StaticResource shadowButton}"/>
        <Setter Property="Background" Value="{StaticResource ImportantButtonColor}"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ImportantButtonColorHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Grid" x:Key="BorderGrid">
        <Style.Resources>
        </Style.Resources>
    </Style>
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource Layer3Color}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource Layer2Color}"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"/>
            </Style>
        </Style.Resources>
    </Style>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <ControlTemplate x:Key="ImportantButton" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ImportantButtonColorHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ImportantButtonColorClick}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{StaticResource Layer2Color}"/>
        <Style.Resources>
        </Style.Resources>
    </Style>
    <ControlTemplate x:Key="Template1" TargetType="Expander">
        <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="{StaticResource BorderRadius}" SnapsToDevicePixels="True">
        <DockPanel>
          <ToggleButton Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" DockPanel.Dock="Top" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" FontStretch="{TemplateBinding Control.FontStretch}" FontStyle="{TemplateBinding Control.FontStyle}" FontWeight="{TemplateBinding Control.FontWeight}" Foreground="{TemplateBinding Control.Foreground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" MinHeight="0" MinWidth="0" Name="HeaderSite" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}">
            <ToggleButton.FocusVisualStyle>
              <Style>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate>
                      <Border CornerRadius="5">
                        <Rectangle SnapsToDevicePixels="True" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                      </Border>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </ToggleButton.FocusVisualStyle>
            <ToggleButton.Style>
              <Style TargetType="ToggleButton">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Border Padding="{TemplateBinding Control.Padding}" CornerRadius="5">
                        <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="19" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                          <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center" />
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                          <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                          <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </ToggleButton.Style>
          </ToggleButton>
          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Name="ExpandSite" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Collapsed" />
        </DockPanel>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="Expander.IsExpanded" Value="True">
          <Setter Property="UIElement.Visibility" TargetName="ExpandSite" Value="Visible" />
        </Trigger>
        <Trigger Property="Expander.ExpandDirection" Value="Right">
          <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
          <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
          <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
            <Setter.Value>
              <Style TargetType="ToggleButton">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Border Padding="{TemplateBinding Control.Padding}" CornerRadius="5">
                        <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="19" />
                            <RowDefinition Height="*" />
                          </Grid.RowDefinitions>
                          <Grid>
                            <Grid.LayoutTransform>
                              <TransformGroup>
                                <RotateTransform Angle="-90" />
                              </TransformGroup>
                            </Grid.LayoutTransform>
                            <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                            <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center" />
                          </Grid>
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Row="1" HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                          <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                          <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Setter.Value>
          </Setter>
        </Trigger>
        <Trigger Property="Expander.ExpandDirection" Value="Up">
          <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
          <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
          <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
            <Setter.Value>
              <Style TargetType="ToggleButton">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Border Padding="{TemplateBinding Control.Padding}" CornerRadius="5">
                        <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="19" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <Grid>
                            <Grid.LayoutTransform>
                              <TransformGroup>
                                <RotateTransform Angle="180" />
                              </TransformGroup>
                            </Grid.LayoutTransform>
                            <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                            <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center" />
                          </Grid>
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                          <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                          <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Setter.Value>
          </Setter>
        </Trigger>
        <Trigger Property="Expander.ExpandDirection" Value="Left">
          <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
          <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
          <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
            <Setter.Value>
              <Style TargetType="ToggleButton">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Border Padding="{TemplateBinding Control.Padding}" CornerRadius="5">
                        <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="19" />
                            <RowDefinition Height="*" />
                          </Grid.RowDefinitions>
                          <Grid>
                            <Grid.LayoutTransform>
                              <TransformGroup>
                                <RotateTransform Angle="90" />
                              </TransformGroup>
                            </Grid.LayoutTransform>
                            <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                            <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center" />
                          </Grid>
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Row="1" HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                          <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                          <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                          <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                          <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Setter.Value>
          </Setter>
        </Trigger>
        <Trigger Property="UIElement.IsEnabled" Value="False">
          <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>